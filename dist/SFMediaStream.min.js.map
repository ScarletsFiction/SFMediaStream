{"version":3,"sources":["z_extra.js","AudioBufferStreamer.js","a_init.js","MediaPlayer.js","MediaPresenter.js"],"names":["window","ScarletsAudioBufferStreamer","bufferElement","chunksDuration","scope","this","debug","bufferAvailable","bufferPending","currentBuffer","playing","buffering","streaming","currentDuration","latency","error","realtime","bufferSkip","mimeType","webAudio","isMobile","audioContext","ScarletsMedia","bufferHeader","setBufferHeader","arrayBuffer","byteLength","decodeAudioData","slice","audioBuffer","duration","initAudioEvent","i","onended","console","log","disconnect","URL","revokeObjectURL","src","playAvailable","indexOf","length","fillEmptyBuffer","addBufferElement","push","createBufferSource","audioHandler","Audio","webAudioBufferInsert","index","buffer","transferFunction","connect","destination","receiveBuffer","streamingTime","unplayed","Number","String","Date","now","baseLatency","fileReader","FileReader","realtimeBufferInterval","realtimeBufferPlay","onload","result","start","readAsArrayBuffer","Blob","type","createObjectURL","load","play","currentTime","shift","playBuffer","playStream","stop","splice","AudioContext","ScarletsMediaPlayer","element","self","propertyLinker","tagName","toLowerCase","concat","canPlayType","objectPropertyLinker","preload","audioFadeEffect","speed","set","undefined","defaultPlaybackRate","playbackRate","mute","muted","defaultMuted","volume","callback","paused","fadeNumber","num","pause","prepare","links","force","temp","querySelectorAll","remove","insertAdjacentHTML","eventRegistered","eventTrigger","e","on","eventName","name","addEventListener","off","removeEventListener","once","playlist","currentIndex","list","original","loop","shuffled","reload","lists","shuffle","add","obj","next","previous","Object","values","j","x","Math","floor","random","ScarletsMediaPresenter","streamInfo","onRecordingReady","onBufferProcess","mediaRecorder","recordingReady","recording","mediaGranted","options","audio","video","MediaRecorder","isTypeSupported","recordingInterval","mediaStream","bufferHeaderLength","onstart","requestData","ondataavailable","setTimeout","data","setInterval","startRecording","stream","active","navigator","mediaDevices","getUserMedia","then","catch","stopRecording","clearInterval","streams","getTracks","removeTrack","emptyBuffer","createBuffer","mobileMediaUnlock","source","document","noteOn","resume","test","userAgent","target","property","defineProperty","get","value","enumerable","configurable","maxFade","from","to","increment","fadeTime","onIncrease","onFinish","current","interval","abs","Infinity","timer","ceil"],"mappings":"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","file":"SFMediaStream.min.js","sourcesContent":["// Unlock mobile media security\r\nif(isMobile()){\r\n\tvar emptyBuffer = ScarletsMedia.audioContext.createBuffer(1, 1, 22050);\r\n\tvar mobileMediaUnlock = function(e){\r\n\t\tvar source = ScarletsMedia.audioContext.createBufferSource();\r\n\t\tsource.buffer = emptyBuffer;\r\n\t\tsource.connect(ScarletsMedia.audioContext.destination);\r\n\r\n\t\tsource.onended = function(){\r\n\t\t\tsource.disconnect(0);\r\n\t\t\tsource = emptyBuffer = null;\r\n\r\n\t\t\tdocument.removeEventListener('touchstart', mobileMediaUnlock, true);\r\n\t\t\tdocument.removeEventListener('touchend', mobileMediaUnlock, true);\r\n\t\t\tdocument.removeEventListener('click', mobileMediaUnlock, true);\r\n\t\t}\r\n\r\n\t\t// Play the empty buffer.\r\n\t\tif(!source.start) source.noteOn(0);\r\n\t\telse source.start(0);\r\n\t\tScarletsMedia.audioContext.resume();\r\n\t}\r\n\r\n\tdocument.addEventListener('touchstart', mobileMediaUnlock, true);\r\n\tdocument.addEventListener('touchend', mobileMediaUnlock, true);\r\n\tdocument.addEventListener('click', mobileMediaUnlock, true);\r\n}\r\n\r\nfunction isMobile(){\r\n    return /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi/i.test(navigator.userAgent);\r\n}\r\n\r\nfunction objectPropertyLinker(self, target, property){\r\n\tObject.defineProperty(self, property, {\r\n\t  get: function(){ return target[property]; },\r\n\t  set: function(value){ target[property] = value; },\r\n\t  enumerable: true,\r\n\t  configurable: true\r\n\t});\r\n}\r\n\r\nvar maxFade = 0;\r\nfunction fadeNumber(from, to, increment, fadeTime, onIncrease, onFinish){\r\n\tmaxFade = 0;\r\n\tvar current = from;\r\n\tvar interval = fadeTime/(Math.abs(from-to)/Math.abs(increment));\r\n\tif(!interval || interval == Infinity){\r\n\t\tsetTimeout(function(){\r\n\t\t\tif(onIncrease) onIncrease(to);\r\n\t\t\tif(onFinish) onFinish();\r\n\t\t}, fadeTime);\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar timer = setInterval(function(){\r\n\t\tif(maxFade>=100) clearInterval(timer);\r\n\t\tmaxFade++;\r\n\t\r\n\t\tcurrent = (current+increment)*1000;\r\n\t\tcurrent = Math.ceil(current)/1000;\r\n\t\r\n\t\t//Increasing and current is more than target\r\n\t\tif((increment >= 0 && (current >= to || from >= to))\r\n\t\t\t||\r\n\t\t//Decreasing and current is lower than target\r\n\t\t(increment <= 0 && (current <= to || from <= to))\r\n\t\t\t||\r\n\t\t//Infinity or Zero number\r\n\t\t(current == Infinity || !current))\r\n\t\t{\r\n\t\t\tclearInterval(timer);\r\n\t\t\tonIncrease(to);\r\n\t\t\tif(onFinish) onFinish();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif(onIncrease) onIncrease(current); \r\n\t}, interval);\r\n}","// Minimum 3 bufferElement\r\nwindow.ScarletsAudioBufferStreamer = function(bufferElement, chunksDuration){\r\n\tif(!bufferElement || bufferElement < 3) bufferElement = 3;\r\n\tif(!chunksDuration) chunksDuration = 1000;\r\n\r\n\tvar scope = this;\r\n\r\n\tscope.debug = false;\r\n\tscope.bufferElement = [];\r\n\tscope.bufferAvailable = [];\r\n\tscope.bufferPending = [];\r\n\tscope.currentBuffer = 0;\r\n\tscope.playing = false;\r\n\tscope.buffering = false;\r\n\tscope.streaming = false;\r\n\tscope.currentDuration = false;\r\n\tscope.latency = 0;\r\n\tscope.error = 0;\r\n\tscope.realtime = false;\r\n\tscope.bufferSkip = 0.07;\r\n\tscope.mimeType = null;\r\n\r\n\t// Use webAudio for mobile, and HTML5 audio for computer\r\n\tscope.webAudio = isMobile()?true:false; // Mobile browser have security on HTML element\r\n\tscope.audioContext = ScarletsMedia.audioContext;\r\n\t// Avoid webAudio for computer browser because memory usage\r\n\r\n\tvar bufferHeader = false;\r\n\tvar bufferHeaderLength = false;\r\n\r\n\tscope.setBufferHeader = function(arrayBuffer){\r\n\t\tif(!arrayBuffer){\r\n\t\t\tbufferHeader = bufferHeaderLength = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tbufferHeader = arrayBuffer;\r\n\t\tbufferHeaderLength = arrayBuffer.byteLength;\r\n\r\n\t\t// Find buffer skip\r\n\t\tif(scope.audioContext)\r\n\t\t\tscope.audioContext.decodeAudioData(arrayBuffer.slice(0), function(audioBuffer){\r\n\t\t\t\tscope.bufferSkip = audioBuffer.duration;\r\n\t\t\t});\r\n\t}\r\n\r\n\tvar initAudioEvent = function(i){\r\n\t\tscope.bufferElement[i].onended = function(){\r\n\t\t\tif(scope.debug) console.log(\"Buffer ended with ID: \"+i);\r\n\r\n\t\t\tif(!scope.webAudio){ // HTML5 Audio\r\n\t\t\t\tURL.revokeObjectURL(scope.bufferElement[i].src);\r\n\t\t\t\tscope.bufferElement[i].src = '';\r\n\t\t\t} else this.disconnect(0);\r\n\r\n\t\t\tif(!scope.realtime){\r\n\t\t\t\tscope.bufferAvailable[i] = false;\r\n\t\t\t\tscope.playing = false;\r\n\t\t\t\tscope.buffering = true;\r\n\t\t\t\tscope.playAvailable();\r\n\r\n\t\t\t\tif(scope.bufferAvailable.indexOf(false)!=-1&&scope.bufferPending.length!=0)\r\n\t\t\t\t\tfillEmptyBuffer();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t// First initialization\r\n\tfor (var i = 0; i < bufferElement; i++) addBufferElement(i);\r\n\tfunction addBufferElement(i){\r\n\t\tif(scope.webAudio){\r\n\t\t\tscope.bufferElement.push(scope.audioContext.createBufferSource());\r\n\t\t\tscope.bufferAvailable.push(false);\r\n\t\t} else { // HTML5 Audio\r\n\t\t\tvar audioHandler = new Audio();\r\n\t\t\tif(audioHandler){\r\n\t\t\t\tscope.bufferElement.push(audioHandler);\r\n\t\t\t\tscope.bufferAvailable.push(false);\r\n\t\t\t\tinitAudioEvent(i);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar addBufferHeader = function(arrayBuffer){\r\n\t\tvar finalBuffer = new Uint8Array(bufferHeaderLength + arrayBuffer.byteLength);\r\n\t\tfinalBuffer.set(bufferHeader, 0);\r\n\t\tfinalBuffer.set(new Uint8Array(arrayBuffer), bufferHeaderLength);\r\n\t\treturn finalBuffer.buffer;\r\n\t}\r\n\r\n\tscope.receiveBuffer = function(arrayBuffer){\r\n\t\tif(scope.debug) console.log(\"Receiving data\", arrayBuffer[0].byteLength);\r\n\t\tif(!scope.streaming) return;\r\n\t\tvar streamingTime = arrayBuffer[1];\r\n\t\tscope.realtime = false;\r\n\r\n\t\tif(chunksDuration){\r\n\t\t\tvar unplayed = scope.bufferPending.length;\r\n\t\t\tfor (var i = 0; i < bufferElement; i++) {\r\n\t\t\t\tif(scope.bufferAvailable[i]) unplayed++;\r\n\t\t\t}\r\n\t\t\tscope.latency = (Number(String(Date.now()).slice(-5, -3)) - streamingTime) \r\n\t\t\t\t\t\t\t\t+ chunksDuration*unplayed + scope.audioContext.baseLatency;\r\n\t\t\tif(scope.debug) console.log(\"Total latency: \"+scope.latency);\r\n\t\t}\r\n\r\n\t\tscope.bufferPending.push(arrayBuffer[0]);\r\n\t\tfillEmptyBuffer();\r\n\r\n\t\tif(scope.buffering)\r\n\t\t\tscope.playAvailable();\r\n\t}\r\n\r\n\tfunction webAudioBufferInsert(index, buffer){\r\n\t\tvar transferFunction = scope.bufferElement[index].onended;\r\n\t\tscope.bufferElement[index] = scope.audioContext.createBufferSource();\r\n\t\tscope.bufferElement[index].buffer = buffer;\r\n\t\tscope.bufferElement[index].connect(scope.audioContext.destination);\r\n\t\tscope.bufferElement[index].onended = transferFunction;\r\n\t}\r\n\r\n\tvar fileReader = new FileReader();\r\n\tvar realtimeBufferInterval = 0; // Need 3 bufferElement, other than this will give lower quality\r\n\tscope.realtimeBufferPlay = function(arrayBuffer){\r\n\t\tif(scope.debug) console.log(\"Receiving data\", arrayBuffer[0].byteLength);\r\n\t\tscope.latency = (Number(String(Date.now()).slice(-5, -3)) - arrayBuffer[1]) +\r\n\t\t\tchunksDuration/1000 + scope.audioContext.baseLatency;\r\n\r\n\t\tscope.realtime = true;\r\n\t\t\r\n\t\tvar index = realtimeBufferInterval;\r\n\t\trealtimeBufferInterval++;\r\n\t\tif(realtimeBufferInterval > 2)\r\n\t\t\trealtimeBufferInterval = 0;\r\n\r\n\t\tif(scope.webAudio){\r\n\t\t\tfileReader.onload = function() {\r\n\t\t\t\tscope.audioContext.decodeAudioData(this.result, function(buffer){\r\n\t\t\t\t\twebAudioBufferInsert(index, buffer);\r\n\t\t\t\t\tscope.bufferElement[index].start(scope.bufferSkip);\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t\tfileReader.readAsArrayBuffer(new Blob([bufferHeader, arrayBuffer[0]], {type:scope.mimeType}));\r\n\t\t} else { // HTML5 Audio\r\n\t\t\tURL.revokeObjectURL(scope.bufferElement[index].src);\r\n\t\t\tscope.bufferElement[index].src = URL.createObjectURL(new Blob([bufferHeader, arrayBuffer[0]], {type:scope.mimeType}));\r\n\t\t\tscope.bufferElement[index].load();\r\n\t\t\tscope.bufferElement[index].play();\r\n\t\t\tscope.bufferElement[index].currentTime = scope.bufferSkip;\r\n\t\t}\r\n\t}\r\n\r\n\tvar fillEmptyBuffer = function(){\r\n\t\tvar index = scope.bufferAvailable.indexOf(false, scope.currentBuffer);\r\n\t\tif(index==-1)\r\n\t\t\tindex = scope.bufferAvailable.indexOf(false);\r\n\t\tif(index==-1||scope.bufferPending.length==0)\r\n\t\t\treturn;\r\n\r\n\t\tif(scope.webAudio){\r\n\t\t\tfileReader.onload = function() {\r\n\t\t\t\tscope.audioContext.decodeAudioData(this.result, function(buffer){\r\n\t\t\t\t\twebAudioBufferInsert(index, buffer);\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t\tfileReader.readAsArrayBuffer(new Blob([bufferHeader, scope.bufferPending[0]], {type:scope.mimeType}));\r\n\t\t} else { // HTML5 Audio\r\n\t\t\tscope.bufferElement[index].src = URL.createObjectURL(new Blob([bufferHeader, scope.bufferPending[0]], {type:scope.mimeType}));\r\n\t\t\tscope.bufferElement[index].load();\r\n\t\t}\r\n\r\n\t\tscope.bufferPending.shift();\r\n\t\tscope.bufferAvailable[index] = true;\r\n\r\n\t\tif(scope.buffering) scope.playAvailable();\r\n\t\tif(scope.debug) console.log(\"Buffer updated with ID: \"+index);\r\n\t}\r\n\r\n\tscope.playBuffer = function(index){\r\n\t\tif(!scope.bufferElement[index].duration)\r\n\t\t\treturn;\r\n\r\n\t\tif(scope.debug) console.log(\"Current stream duration: \"+scope.bufferElement[index].duration);\r\n\r\n\t\tif(chunksDuration===false){ //Skip to end to get current duration\r\n\t\t\tchunksDuration = scope.bufferElement[index].duration;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tscope.buffering = false;\r\n\t\tscope.playing = true;\r\n\t\tchunksDuration = scope.bufferElement[index].duration;\r\n\t\tif(scope.bufferElement[index].start)\r\n\t\t\tscope.bufferElement[index].start(scope.bufferSkip);\r\n\t\telse {\r\n\t\t\tscope.bufferElement[index].play();\r\n\t\t\tscope.bufferElement[index].currentTime = scope.bufferSkip;\r\n\t\t}\r\n\r\n\t\tscope.currentBuffer = index;\r\n\t\tif(scope.debug) console.log(\"Playing buffer ID: \"+scope.currentBuffer);\r\n\t}\r\n\r\n\tscope.playAvailable = function(){\r\n\t\tif(scope.playing) return;\r\n\r\n\t\tif(scope.bufferAvailable[scope.currentBuffer])\r\n\t\t\treturn scope.playBuffer(scope.currentBuffer);\r\n\r\n\t\telse{\r\n\t\t\tvar index = scope.bufferAvailable.indexOf(true, scope.currentBuffer);\r\n\t\t\tif(index!=-1) return scope.playBuffer(index);\r\n\r\n\t\t\telse{ // Scan from first array\r\n\t\t\t\tindex = scope.bufferAvailable.indexOf(true);\r\n\t\t\t\tif(index!=-1) return scope.playBuffer(index);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tscope.playStream = function(){\r\n\t\tscope.streaming = scope.buffering = true;\r\n\t}\r\n\r\n\tscope.stop = function(){\r\n\t\tscope.bufferPending.splice(0);\r\n\t\tfor (var i = 0; i < bufferElement; i++) {\r\n\t\t\tscope.bufferElement[i].stop();\r\n\t\t\tinitAudioEvent(i);\r\n\t\t\tscope.bufferAvailable[i] = false;\r\n\t\t}\r\n\t\tscope.playing = false;\r\n\t\tscope.buffering = false;\r\n\t\tscope.currentBuffer = 0;\r\n\t}\r\n}","/*\r\n\tScarletsFiction MediaStream Library\r\n\t\r\n\tHTML5 media streamer library for playing music, video, playlist,\r\n\tor even live streaming microphone & camera with node server\r\n\thttps://github.com/ScarletsFiction/SFMediaStream\r\n\t\r\n\tMake sure you include this header on this script\r\n*/\r\n'use strict';\r\n\r\n// Initialize global data\r\nwindow.ScarletsMedia = {\r\n\taudioContext: window.AudioContext ? new AudioContext() : false\r\n}","// https://www.w3schools.com/tags/ref_av_dom.asp\r\n// https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement\r\nwindow.ScarletsMediaPlayer = function(element){\r\n\t// https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Media_events\r\n\tvar self = this;\r\n\r\n\tvar propertyLinker = ['autoplay', 'loop', 'buffered', 'buffered', 'controller', 'currentTime', 'currentSrc', 'duration', 'ended', 'error', 'readyState', 'networkState', 'paused', 'played', 'seekable', 'seeking'];\r\n\r\n\tif(element.tagName.toLowerCase() === 'video')\r\n\t\tpropertyLinker = propertyLinker.concat(['poster', 'height', 'width']);\r\n\r\n\t// Reference element function\r\n\tself.load = function(){\r\n\t\telement.load();\r\n\t}\r\n\r\n\tself.canPlayType = function(){\r\n\t\telement.canPlayType();\r\n\t}\r\n\r\n\t// Reference element property\r\n\tfor (var i = 0; i < propertyLinker.length; i++) {\r\n\t\tobjectPropertyLinker(self, element, propertyLinker[i]);\r\n\t}\r\n\r\n\tself.preload = true;\r\n\telement.preload = 'metadata';\r\n\tself.audioFadeEffect = true;\r\n\r\n\tself.speed = function(set){\r\n\t\tif(set === undefined) return element.defaultPlaybackRate;\r\n\t\telement.defaultPlaybackRate = element.playbackRate = set;\r\n\t}\r\n\r\n\tself.mute = function(set){\r\n\t\tif(set === undefined) return element.muted;\r\n\t\telement.defaultMuted = element.muted = set;\r\n\t}\r\n\r\n\tvar volume = 1;\r\n\tself.volume = function(set){\r\n\t\tif(set === undefined) return volume;\r\n\t\telement.volume = volume = set;\r\n\t}\r\n\r\n\tself.play = function(callback){\r\n\t\tif(!element.paused){\r\n\t\t\tif(callback) callback();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(self.audioFadeEffect){\r\n\t\t\telement.volume = 0;\r\n\t\t\telement.play();\r\n\t\t\tfadeNumber(0, volume, -0.05, 400, function(num){\r\n\t\t\t\telement.volume = num;\r\n\t\t\t}, callback);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telement.play();\r\n\t\tif(callback) callback();\r\n\t}\r\n\r\n\tself.pause = function(callback){\r\n\t\tif(element.paused){\r\n\t\t\tif(callback) callback();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(self.audioFadeEffect){\r\n\t\t\tfadeNumber(volume, 0, -0.05, 400, function(num){\r\n\t\t\t\telement.volume = num;\r\n\t\t\t}, function(){\r\n\t\t\t\telement.pause();\r\n\t\t\t\tif(callback) callback();\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telement.pause();\r\n\t\tif(callback) callback();\r\n\t}\r\n\r\n\tself.prepare = function(links, callback, force){\r\n\t\t// Stop playing media\r\n\t\tif(!force && !element.paused)\r\n\t\t\treturn self.pause(function(){\r\n\t\t\t\tself.prepare(links, callback, true);\r\n\t\t\t});\r\n\r\n\t\tvar temp = element.querySelectorAll('source');\r\n\t\tfor (var i = temp.length - 1; i >= 0; i--) {\r\n\t\t\ttemp[i].remove();\r\n\t\t}\r\n\r\n\t\tif(typeof links === 'string')\r\n\t\t\telement.insertAdjacentHTML('beforeend', `<source src=\"${links}\"/>`);\r\n\t\telse{\r\n\t\t\ttemp = '';\r\n\t\t\tfor (var i = 0; i < links.length; i++) {\r\n\t\t\t\ttemp += `<source src=\"${links[i]}\"/>`;\r\n\t\t\t}\r\n\t\t\telement.insertAdjacentHTML('beforeend', temp);\r\n\t\t}\r\n\r\n\t\t// Preload data\r\n\t\tif(self.preload) element.load();\r\n\t\tif(callback) callback();\r\n\t}\r\n\r\n\tvar eventRegistered = {};\r\n\tfunction eventTrigger(e){\r\n\t\tfor (var i = 0; i < eventRegistered[e.type].length; i++) {\r\n\t\t\teventRegistered[e.type][i](e, self);\r\n\t\t}\r\n\t}\r\n\r\n\t// https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Media_events\r\n\tself.on = function(eventName, callback){\r\n\t\tvar name = eventName.toLowerCase();\r\n\t\tif(eventRegistered[name] === undefined){\r\n\t\t\telement.addEventListener(eventName, eventTrigger, true);\r\n\t\t\teventRegistered[name] = [];\r\n\t\t}\r\n\t\teventRegistered[name].push(callback);\r\n\t}\r\n\r\n\tself.off = function(eventName, callback){\r\n\t\tvar name = eventName.toLowerCase();\r\n\t\tif(eventRegistered[name] === undefined)\r\n\t\t\treturn;\r\n\r\n\t\tif(!callback)\r\n\t\t\teventRegistered[name].splice(0);\r\n\t\telse\r\n\t\t\teventRegistered[name].splice(eventRegistered[name].indexOf(callback), 1);\r\n\r\n\t\tif(eventRegistered[name].length === 0){\r\n\t\t\teventRegistered[name] = undefined;\r\n\t\t\telement.removeEventListener(eventName, eventTrigger, true);\r\n\t\t}\r\n\t}\r\n\r\n\tself.once = function(eventName, callback){\r\n\t\telement.addEventListener(eventName, callback, {once:true});\r\n\t}\r\n\r\n\tself.playlist = {\r\n\t\tcurrentIndex:0,\r\n\t\tlist:[],\r\n\t\toriginal:[],\r\n\t\tloop:false,\r\n\t\tshuffled:false,\r\n\r\n\t\t// lists = [{mp3:'main.mp3', ogg:'fallback.ogg', ..}, ...]\r\n\t\treload:function(lists){\r\n\t\t\tthis.original = lists;\r\n\t\t\tif(this.shuffled)\r\n\t\t\t\tthis.shuffle(true);\r\n\t\t},\r\n\r\n\t\t// obj = {mp3:'main.mp3', ogg:'fallback.ogg'}\r\n\t\tadd:function(obj){\r\n\t\t\toriginal.push(obj);\r\n\t\t\tif(this.shuffled)\r\n\t\t\t\tthis.shuffle(true);\r\n\t\t},\r\n\r\n\t\t// index from 'original' property\r\n\t\tremove:function(index){\r\n\t\t\toriginal.splice(index, 1);\r\n\t\t\tif(this.shuffled)\r\n\t\t\t\tthis.shuffle(true);\r\n\t\t},\r\n\r\n\t\tnext:function(index){\r\n\t\t\tthis.currentIndex++;\r\n\t\t\tthis.play(this.currentIndex);\r\n\t\t},\r\n\r\n\t\tprevious:function(index){\r\n\t\t\tthis.currentIndex--;\r\n\t\t\tthis.play(this.currentIndex);\r\n\t\t},\r\n\r\n\t\tplay:function(index){\r\n\t\t\tself.prepare(Object.values(this.original[index]), function(){\r\n\t\t\t\tself.play();\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tshuffle:function(set){\r\n\t\t\tif(set === undefined) return this.shuffled;\r\n\t\t\tif(set === true){\r\n\t\t\t    var j, x, i;\r\n\t\t\t    for (i = this.list.length - 1; i > 0; i--) {\r\n\t\t\t        j = Math.floor(Math.random() * (i + 1));\r\n\t\t\t        x = this.list[i];\r\n\t\t\t        this.list[i] = this.list[j];\r\n\t\t\t        this.list[j] = x;\r\n\t\t\t    }\r\n\t\t\t}\r\n\t\t\telse this.list = this.original.slice(0);\r\n\r\n\t\t\tthis.shuffled = set;\r\n\t\t}\r\n\t};\r\n}","// streamInfo = mediaDevices.getUserMedia({thisData})\r\n// latency = 0ms is not possible (minimum is 70ms, or depend on computer performance)\r\nwindow.ScarletsMediaPresenter = function(streamInfo, latency){\r\n\tvar scope = this;\r\n\tif(!latency) latency = 1000;\r\n\t//var streamInfo = {\r\n\t//    audio:{\r\n\t//        channelCount:1,\r\n\t//        echoCancellation: false\r\n\t//    }, \r\n\t//    video:{\r\n\t//        frameRate:15,\r\n\t//        width: 1280,\r\n\t//        height: 720,\r\n\t//        facingMode: (front? \"user\" : \"environment\")\r\n\t//    }\r\n\t//};\r\n\r\n\tscope.debug = false;\r\n\r\n\tscope.onRecordingReady = null;\r\n\tscope.onBufferProcess = null;\r\n\r\n\tscope.mediaRecorder = null;\r\n\tscope.recordingReady = false;\r\n\r\n\tscope.recording = false;\r\n\r\n\tscope.mediaGranted = false;\r\n\r\n\tvar fileReader = new FileReader();\r\n\tscope.options = {};\r\n\tif(streamInfo.audio&&!streamInfo.video){\r\n\t\tif(MediaRecorder.isTypeSupported('audio/webm;codecs=\"vp9\"'))\r\n\t\t\tscope.options.mimeType = 'audio/webm;codecs=\"vp9\"';\r\n\t\telse if(MediaRecorder.isTypeSupported('audio/webm;codecs=\"vp8\"'))\r\n\t\t\tscope.options.mimeType = 'audio/webm;codecs=\"vp8\"';\r\n\t\telse if(MediaRecorder.isTypeSupported('audio/webm;codecs=\"vorbis\"'))\r\n\t\t\tscope.options.mimeType = 'audio/webm;codecs=\"vorbis\"';\r\n\t\telse if(MediaRecorder.isTypeSupported('audio/webm'))\r\n\t\t\tscope.options.mimeType = 'audio/webm';\r\n\t\telse if(MediaRecorder.isTypeSupported('audio/ogg;codecs=\"opus\"'))\r\n\t\t\tscope.options.mimeType = 'audio/ogg;codecs=\"opus\"';\r\n\t\telse if(MediaRecorder.isTypeSupported('audio/ogg;codecs=\"vorbis\"'))\r\n\t\t\tscope.options.mimeType = 'audio/ogg;codecs=\"vorbis\"';\r\n\t\telse if(MediaRecorder.isTypeSupported('audio/ogg'))\r\n\t\t\tscope.options.mimeType = 'audio/ogg';\r\n\t\telse if(MediaRecorder.isTypeSupported('audio/mp4;codecs=\"mp4a.40.5'))\r\n\t\t\tscope.options.mimeType = 'audio/mp4;codecs=\"mp4a.40.5';\r\n\t\telse if(MediaRecorder.isTypeSupported('audio/mp4'))\r\n\t\t\tscope.options.mimeType = 'audio/mp4';\r\n\t}\r\n\telse if(!streamInfo.audio&&streamInfo.video){\r\n\t\tif(MediaRecorder.isTypeSupported('video/webm;codecs=\"vp9\"'))\r\n\t\t\tscope.options.mimeType = 'video/webm;codecs=\"vp9\"';\r\n\t\telse if(MediaRecorder.isTypeSupported('video/webm;codecs=\"vp8\"'))\r\n\t\t\tscope.options.mimeType = 'video/webm;codecs=\"vp8\"';\r\n\t\telse if(MediaRecorder.isTypeSupported('video/webm;codecs=\"vorbis\"'))\r\n\t\t\tscope.options.mimeType = 'video/webm;codecs=\"vorbis\"';\r\n\t\telse if(MediaRecorder.isTypeSupported('video/webm'))\r\n\t\t\tscope.options.mimeType = 'video/webm';\r\n\t\telse if(MediaRecorder.isTypeSupported('video/ogg;codecs=\"opus\"'))\r\n\t\t\tscope.options.mimeType = 'video/ogg;codecs=\"opus\"';\r\n\t\telse if(MediaRecorder.isTypeSupported('video/ogg;codecs=\"vorbis\"'))\r\n\t\t\tscope.options.mimeType = 'video/ogg;codecs=\"vorbis\"';\r\n\t\telse if(MediaRecorder.isTypeSupported('video/ogg'))\r\n\t\t\tscope.options.mimeType = 'video/ogg';\r\n\t\telse if(MediaRecorder.isTypeSupported('video/mp4;codecs=\"mp4a.40.5'))\r\n\t\t\tscope.options.mimeType = 'video/mp4;codecs=\"mp4a.40.5';\r\n\t\telse if(MediaRecorder.isTypeSupported('video/mp4'))\r\n\t\t\tscope.options.mimeType = 'video/mp4';\r\n\t}\r\n\telse{\r\n\t\tif(MediaRecorder.isTypeSupported('video/webm'))\r\n\t\t\tscope.options.mimeType = 'video/webm';\r\n\t\telse if(MediaRecorder.isTypeSupported('video/mp4'))\r\n\t\t\tscope.options.mimeType = 'video/mp4';\r\n\t}\r\n\r\n\tvar recordingInterval = false;\r\n\tvar mediaGranted = function(mediaStream) {\r\n\t\tscope.mediaGranted = true;\r\n\r\n\t\tscope.bufferHeader = null;\r\n\t\tvar bufferHeaderLength = false;\r\n\r\n\t\tscope.mediaRecorder = new MediaRecorder(mediaStream, scope.options);\r\n\r\n\t\tif(scope.debug) console.log(\"MediaRecorder obtained\");\r\n\t\tscope.mediaRecorder.onstart = function(e) {\r\n\t\t\tscope.recording = true;\r\n\t\t\tif(bufferHeaderLength===false){\r\n\t\t\t\tscope.mediaRecorder.requestData();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tscope.mediaRecorder.ondataavailable = function(e) {\r\n\t\t\tfileReader.onload = function() {\r\n\t\t\t\tvar arrayBuffer = this.result;\r\n\r\n\t\t\t\tif(bufferHeaderLength===false){\r\n\t\t\t\t\tbufferHeaderLength = arrayBuffer.byteLength;\r\n\t\t\t\t\tif(bufferHeaderLength==0){\r\n\t\t\t\t\t\tbufferHeaderLength = false;\r\n\t\t\t\t\t\tsetTimeout(function(){scope.mediaRecorder.requestData()}, 1);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// ToDo: Clean media header\r\n\t\t\t\t\tscope.bufferHeader = arrayBuffer;\r\n\r\n\t\t\t\t\tif(scope.onRecordingReady)\r\n\t\t\t\t\t\tscope.onRecordingReady(scope.bufferHeader);\r\n\t\t\t\t\tscope.recordingReady = true;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(scope.onBufferProcess){\r\n\t\t\t\t\t\tvar streamingTime = Number(String(Date.now()).slice(-5, -3));\r\n\t\t\t\t\t\tscope.onBufferProcess([arrayBuffer, streamingTime]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tfileReader.readAsArrayBuffer(e.data);\r\n\t\t};\r\n\r\n\t\t// Get first header\r\n\t\tscope.mediaRecorder.start();\r\n\r\n\t\t// Stop recording after 3 seconds and broadcast it to server\r\n\t\trecordingInterval = setInterval(function() {\r\n\t\t\tif(!scope.recordingReady) return;\r\n\t\t\tscope.mediaRecorder.requestData();\r\n\t\t}, latency);\r\n\t}\r\n\r\n\tscope.startRecording = function(){\r\n\t\tif(!scope.mediaGranted || !scope.mediaRecorder.stream || !scope.mediaRecorder.stream.active){\r\n\t\t\tscope.recordingReady = false;\r\n\t\t\tnavigator.mediaDevices.getUserMedia(streamInfo).then(mediaGranted).catch(console.error);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tscope.mediaRecorder.start();\r\n\t\t\tscope.recording = true;\r\n\t\t}\r\n\t};\r\n\r\n\tscope.stopRecording = function(){\r\n\t\tclearInterval(recordingInterval);\r\n\t\tscope.mediaRecorder.stop();\r\n\t\tif(!scope.mediaRecorder.stream.stop){\r\n\t\t\tvar streams = scope.mediaRecorder.stream.getTracks();\r\n\t\t\tfor(var i = 0; i < streams.length; i++){\r\n\t\t\t\tstreams[i].stop();\r\n\t\t\t\tscope.mediaRecorder.stream.removeTrack(streams[i]);\r\n\t\t\t}\r\n\t\t} else scope.mediaRecorder.stream.stop();\r\n\r\n\t\tscope.mediaRecorder.ondataavailable = null;\r\n\t\tscope.mediaRecorder.onstart = null;\r\n\r\n\t\tscope.bufferHeader = null;\r\n\t\tscope.recording = false;\r\n\t};\r\n}"]}